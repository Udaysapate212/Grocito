{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authAPI from '../../services/authAPI';\n\n// Async thunks\nexport const loginPartner = createAsyncThunk('auth/loginPartner', async ({\n  emailOrPhone,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authAPI.login(emailOrPhone, password);\n\n    // Store token in localStorage\n    localStorage.setItem('deliveryPartnerToken', response.token);\n    return response;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n  }\n});\nexport const registerPartner = createAsyncThunk('auth/registerPartner', async (registrationData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authAPI.register(registrationData);\n    return response;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n  }\n});\nexport const forgotPassword = createAsyncThunk('auth/forgotPassword', async (email, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authAPI.forgotPassword(email);\n    return response;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to send reset email');\n  }\n});\nexport const resetPassword = createAsyncThunk('auth/resetPassword', async ({\n  token,\n  newPassword\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authAPI.resetPassword(token, newPassword);\n    return response;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Password reset failed');\n  }\n});\n\n// Initial state\nconst initialState = {\n  partner: null,\n  token: localStorage.getItem('deliveryPartnerToken'),\n  isAuthenticated: !!localStorage.getItem('deliveryPartnerToken'),\n  loading: false,\n  error: null,\n  registrationSuccess: false,\n  passwordResetSuccess: false\n};\n\n// Auth slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('deliveryPartnerToken');\n      state.partner = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    clearRegistrationSuccess: state => {\n      state.registrationSuccess = false;\n    },\n    clearPasswordResetSuccess: state => {\n      state.passwordResetSuccess = false;\n    },\n    updatePartnerProfile: (state, action) => {\n      if (state.partner) {\n        state.partner = {\n          ...state.partner,\n          ...action.payload\n        };\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginPartner.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginPartner.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.partner = action.payload.partner;\n      state.error = null;\n    }).addCase(loginPartner.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.partner = null;\n    })\n\n    // Register\n    .addCase(registerPartner.pending, state => {\n      state.loading = true;\n      state.error = null;\n      state.registrationSuccess = false;\n    }).addCase(registerPartner.fulfilled, (state, action) => {\n      state.loading = false;\n      state.registrationSuccess = true;\n      state.error = null;\n    }).addCase(registerPartner.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.registrationSuccess = false;\n    })\n\n    // Forgot Password\n    .addCase(forgotPassword.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(forgotPassword.fulfilled, state => {\n      state.loading = false;\n      state.error = null;\n    }).addCase(forgotPassword.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Reset Password\n    .addCase(resetPassword.pending, state => {\n      state.loading = true;\n      state.error = null;\n      state.passwordResetSuccess = false;\n    }).addCase(resetPassword.fulfilled, state => {\n      state.loading = false;\n      state.passwordResetSuccess = true;\n      state.error = null;\n    }).addCase(resetPassword.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.passwordResetSuccess = false;\n    });\n  }\n});\nexport const {\n  logout,\n  clearError,\n  clearRegistrationSuccess,\n  clearPasswordResetSuccess,\n  updatePartnerProfile\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authAPI","loginPartner","emailOrPhone","password","rejectWithValue","response","login","localStorage","setItem","token","error","_error$response","_error$response$data","data","registerPartner","registrationData","register","_error$response2","_error$response2$data","forgotPassword","email","_error$response3","_error$response3$data","resetPassword","newPassword","_error$response4","_error$response4$data","initialState","partner","getItem","isAuthenticated","loading","registrationSuccess","passwordResetSuccess","authSlice","name","reducers","logout","state","removeItem","clearError","clearRegistrationSuccess","clearPasswordResetSuccess","updatePartnerProfile","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/Uday/Downloads/Grocito/Grocito/grocito-frontend-delivery-partner/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authAPI from '../../services/authAPI';\r\n\r\n// Async thunks\r\nexport const loginPartner = createAsyncThunk(\r\n  'auth/loginPartner',\r\n  async ({ emailOrPhone, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authAPI.login(emailOrPhone, password);\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('deliveryPartnerToken', response.token);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.error || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const registerPartner = createAsyncThunk(\r\n  'auth/registerPartner',\r\n  async (registrationData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authAPI.register(registrationData);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.error || 'Registration failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const forgotPassword = createAsyncThunk(\r\n  'auth/forgotPassword',\r\n  async (email, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authAPI.forgotPassword(email);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.error || 'Failed to send reset email');\r\n    }\r\n  }\r\n);\r\n\r\nexport const resetPassword = createAsyncThunk(\r\n  'auth/resetPassword',\r\n  async ({ token, newPassword }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authAPI.resetPassword(token, newPassword);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.error || 'Password reset failed');\r\n    }\r\n  }\r\n);\r\n\r\n// Initial state\r\nconst initialState = {\r\n  partner: null,\r\n  token: localStorage.getItem('deliveryPartnerToken'),\r\n  isAuthenticated: !!localStorage.getItem('deliveryPartnerToken'),\r\n  loading: false,\r\n  error: null,\r\n  registrationSuccess: false,\r\n  passwordResetSuccess: false,\r\n};\r\n\r\n// Auth slice\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      localStorage.removeItem('deliveryPartnerToken');\r\n      state.partner = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.error = null;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    clearRegistrationSuccess: (state) => {\r\n      state.registrationSuccess = false;\r\n    },\r\n    clearPasswordResetSuccess: (state) => {\r\n      state.passwordResetSuccess = false;\r\n    },\r\n    updatePartnerProfile: (state, action) => {\r\n      if (state.partner) {\r\n        state.partner = { ...state.partner, ...action.payload };\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(loginPartner.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginPartner.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.token = action.payload.token;\r\n        state.partner = action.payload.partner;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginPartner.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.isAuthenticated = false;\r\n        state.token = null;\r\n        state.partner = null;\r\n      })\r\n      \r\n      // Register\r\n      .addCase(registerPartner.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n        state.registrationSuccess = false;\r\n      })\r\n      .addCase(registerPartner.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.registrationSuccess = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerPartner.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.registrationSuccess = false;\r\n      })\r\n      \r\n      // Forgot Password\r\n      .addCase(forgotPassword.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(forgotPassword.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(forgotPassword.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Reset Password\r\n      .addCase(resetPassword.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n        state.passwordResetSuccess = false;\r\n      })\r\n      .addCase(resetPassword.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.passwordResetSuccess = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(resetPassword.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.passwordResetSuccess = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { \r\n  logout, \r\n  clearError, \r\n  clearRegistrationSuccess, \r\n  clearPasswordResetSuccess,\r\n  updatePartnerProfile \r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}