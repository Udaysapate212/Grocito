{"ast":null,"code":"import api from './api';\nconst authAPI = {\n  // Register new delivery partner\n  register: async registrationData => {\n    const response = await api.post('/delivery-partner-auth/register', registrationData);\n    return response;\n  },\n  // Login delivery partner\n  login: async (emailOrPhone, password) => {\n    const response = await api.post('/delivery-partner-auth/login', {\n      emailOrPhone,\n      password\n    });\n    return response;\n  },\n  // Request password reset\n  forgotPassword: async email => {\n    const response = await api.post('/delivery-partner-auth/forgot-password', {\n      email\n    });\n    return response;\n  },\n  // Reset password with token\n  resetPassword: async (token, newPassword) => {\n    const response = await api.post('/delivery-partner-auth/reset-password', {\n      token,\n      newPassword\n    });\n    return response;\n  },\n  // Get auth record by ID\n  getAuthRecord: async id => {\n    const response = await api.get(`/delivery-partner-auth/${id}`);\n    return response;\n  },\n  // Update auth record\n  updateAuthRecord: async (id, updateData) => {\n    const response = await api.put(`/delivery-partner-auth/${id}`, updateData);\n    return response;\n  }\n};\nexport default authAPI;","map":{"version":3,"names":["api","authAPI","register","registrationData","response","post","login","emailOrPhone","password","forgotPassword","email","resetPassword","token","newPassword","getAuthRecord","id","get","updateAuthRecord","updateData","put"],"sources":["C:/Users/Uday/Downloads/Grocito/Grocito/grocito-frontend-delivery-partner/src/services/authAPI.js"],"sourcesContent":["import api from './api';\r\n\r\nconst authAPI = {\r\n  // Register new delivery partner\r\n  register: async (registrationData) => {\r\n    const response = await api.post('/delivery-partner-auth/register', registrationData);\r\n    return response;\r\n  },\r\n\r\n  // Login delivery partner\r\n  login: async (emailOrPhone, password) => {\r\n    const response = await api.post('/delivery-partner-auth/login', {\r\n      emailOrPhone,\r\n      password,\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Request password reset\r\n  forgotPassword: async (email) => {\r\n    const response = await api.post('/delivery-partner-auth/forgot-password', {\r\n      email,\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Reset password with token\r\n  resetPassword: async (token, newPassword) => {\r\n    const response = await api.post('/delivery-partner-auth/reset-password', {\r\n      token,\r\n      newPassword,\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Get auth record by ID\r\n  getAuthRecord: async (id) => {\r\n    const response = await api.get(`/delivery-partner-auth/${id}`);\r\n    return response;\r\n  },\r\n\r\n  // Update auth record\r\n  updateAuthRecord: async (id, updateData) => {\r\n    const response = await api.put(`/delivery-partner-auth/${id}`, updateData);\r\n    return response;\r\n  },\r\n};\r\n\r\nexport default authAPI;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,OAAO,GAAG;EACd;EACAC,QAAQ,EAAE,MAAOC,gBAAgB,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,iCAAiC,EAAEF,gBAAgB,CAAC;IACpF,OAAOC,QAAQ;EACjB,CAAC;EAED;EACAE,KAAK,EAAE,MAAAA,CAAOC,YAAY,EAAEC,QAAQ,KAAK;IACvC,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,8BAA8B,EAAE;MAC9DE,YAAY;MACZC;IACF,CAAC,CAAC;IACF,OAAOJ,QAAQ;EACjB,CAAC;EAED;EACAK,cAAc,EAAE,MAAOC,KAAK,IAAK;IAC/B,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,wCAAwC,EAAE;MACxEK;IACF,CAAC,CAAC;IACF,OAAON,QAAQ;EACjB,CAAC;EAED;EACAO,aAAa,EAAE,MAAAA,CAAOC,KAAK,EAAEC,WAAW,KAAK;IAC3C,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,uCAAuC,EAAE;MACvEO,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOT,QAAQ;EACjB,CAAC;EAED;EACAU,aAAa,EAAE,MAAOC,EAAE,IAAK;IAC3B,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,GAAG,CAAC,0BAA0BD,EAAE,EAAE,CAAC;IAC9D,OAAOX,QAAQ;EACjB,CAAC;EAED;EACAa,gBAAgB,EAAE,MAAAA,CAAOF,EAAE,EAAEG,UAAU,KAAK;IAC1C,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAC,0BAA0BJ,EAAE,EAAE,EAAEG,UAAU,CAAC;IAC1E,OAAOd,QAAQ;EACjB;AACF,CAAC;AAED,eAAeH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}